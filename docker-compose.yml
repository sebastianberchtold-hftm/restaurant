version: '3.8'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ordersdb
    ports:
      - "5432:5432"

  # Quarkus Service 1
  orders-service:
    # Falls du dein Image "orders-service:1.0.0" nennst:
    image: orders-service:1.0.0
    container_name: orders-service
    depends_on:
      - kafka
      - postgres
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/ordersdb
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      # Im Docker-Netzwerk spricht man Kafka unter "kafka:9092" an
      MP_MESSAGING_OUTGOING_ORDERS_OUT_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"

  # Quarkus Service 2
  inventory-service:
    image: inventory-service:1.0.0
    container_name: inventory-service
    depends_on:
      - kafka
    environment:
      MP_MESSAGING_INCOMING_ORDERS_IN_BOOTSTRAP_SERVERS: kafka:9092
      MP_MESSAGING_OUTGOING_INVENTORY_OUT_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
